// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JewelryStore.DAL.Migrations
{
    [DbContext(typeof(JewelryStoreDbContext))]
    [Migration("20250615003457_DataSeeding")]
    partial class DataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JewelryStore.DAL.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            BirthDate = new DateTime(2001, 2, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Hoya",
                            LastName = "Kaia",
                            PhoneNumber = "0991125869"
                        },
                        new
                        {
                            ClientId = 2,
                            BirthDate = new DateTime(1974, 6, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Kavun",
                            LastName = "Sydor",
                            PhoneNumber = "0665923301"
                        },
                        new
                        {
                            ClientId = 3,
                            BirthDate = new DateTime(1990, 9, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Slyvka",
                            LastName = "Yulia",
                            PhoneNumber = "0997735412"
                        },
                        new
                        {
                            ClientId = 4,
                            BirthDate = new DateTime(1989, 12, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Gojo",
                            LastName = "Satoru",
                            PhoneNumber = "0663078021"
                        },
                        new
                        {
                            ClientId = 5,
                            BirthDate = new DateTime(2001, 12, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Burya",
                            LastName = "Kyryl",
                            PhoneNumber = "0508830294"
                        },
                        new
                        {
                            ClientId = 6,
                            BirthDate = new DateTime(1985, 11, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Kaidash",
                            LastName = "Volodymyr",
                            PhoneNumber = "0997761290"
                        },
                        new
                        {
                            ClientId = 7,
                            BirthDate = new DateTime(1991, 4, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Levytskii",
                            LastName = "Vladyslav",
                            PhoneNumber = "0995370162"
                        });
                });

            modelBuilder.Entity("JewelryStore.DAL.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.Property<string>("Schedule")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BirthDate = new DateTime(1986, 7, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Vyshnevska",
                            LastName = "Iryna",
                            PhoneNumber = "0995647231",
                            PositionId = 1,
                            Schedule = "weekdays"
                        },
                        new
                        {
                            EmployeeId = 2,
                            BirthDate = new DateTime(1984, 12, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Levytskyi",
                            LastName = "Andrii",
                            PhoneNumber = "0667735429",
                            PositionId = 2,
                            Schedule = "weekdays"
                        },
                        new
                        {
                            EmployeeId = 3,
                            BirthDate = new DateTime(1985, 8, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Gavryl",
                            LastName = "Kai",
                            PhoneNumber = "0506723490",
                            PositionId = 3,
                            Schedule = "weekdays"
                        },
                        new
                        {
                            EmployeeId = 4,
                            BirthDate = new DateTime(1980, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Skrypal",
                            LastName = "Anton",
                            PhoneNumber = "0996654981",
                            PositionId = 4,
                            Schedule = "Monday, Tuesday, Friday, Saturday"
                        },
                        new
                        {
                            EmployeeId = 5,
                            BirthDate = new DateTime(1979, 1, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Voznyak",
                            LastName = "Lana",
                            PhoneNumber = "0954311076",
                            PositionId = 4,
                            Schedule = "Wednesday, Thursday, Sunday"
                        },
                        new
                        {
                            EmployeeId = 6,
                            BirthDate = new DateTime(1991, 2, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Sklyar",
                            LastName = "Wonbin",
                            PhoneNumber = "0669014463",
                            PositionId = 5,
                            Schedule = "Monday, Wednesday, Thursday, Saturday"
                        },
                        new
                        {
                            EmployeeId = 7,
                            BirthDate = new DateTime(1992, 7, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Tkach",
                            LastName = "Omar",
                            PhoneNumber = "0952216598",
                            PositionId = 5,
                            Schedule = "Monday, Tuesday, Thursday, Sunday"
                        },
                        new
                        {
                            EmployeeId = 8,
                            BirthDate = new DateTime(1996, 5, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Andruhovych",
                            LastName = "Elina",
                            PhoneNumber = "0508914269",
                            PositionId = 5,
                            Schedule = "Tuesday, Wednesday, Friday"
                        },
                        new
                        {
                            EmployeeId = 9,
                            BirthDate = new DateTime(2000, 2, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Soya",
                            LastName = "Yan",
                            PhoneNumber = "0504012380",
                            PositionId = 5,
                            Schedule = "Friday, Saturday, Sunday"
                        },
                        new
                        {
                            EmployeeId = 10,
                            BirthDate = new DateTime(1990, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Yalivec",
                            LastName = "Serhii",
                            PhoneNumber = "0956439071",
                            PositionId = 6,
                            Schedule = "Monday, Wednesday, Friday"
                        },
                        new
                        {
                            EmployeeId = 11,
                            BirthDate = new DateTime(1993, 9, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Komariv",
                            LastName = "Dmytro",
                            PhoneNumber = "0668789190",
                            PositionId = 6,
                            Schedule = "Tuesday, Thursday, Saturday, Sunday"
                        });
                });

            modelBuilder.Entity("JewelryStore.DAL.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ClientId = 1,
                            EmployeeId = 3,
                            OrderDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 5
                        },
                        new
                        {
                            OrderId = 2,
                            ClientId = 2,
                            EmployeeId = 7,
                            OrderDate = new DateTime(2024, 3, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 8
                        },
                        new
                        {
                            OrderId = 3,
                            ClientId = 3,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2024, 4, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 2
                        },
                        new
                        {
                            OrderId = 4,
                            ClientId = 4,
                            EmployeeId = 10,
                            OrderDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 9
                        },
                        new
                        {
                            OrderId = 5,
                            ClientId = 5,
                            EmployeeId = 6,
                            OrderDate = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 4
                        },
                        new
                        {
                            OrderId = 6,
                            ClientId = 6,
                            EmployeeId = 2,
                            OrderDate = new DateTime(2024, 5, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 7
                        },
                        new
                        {
                            OrderId = 7,
                            ClientId = 7,
                            EmployeeId = 11,
                            OrderDate = new DateTime(2024, 5, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("JewelryStore.DAL.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            PositionName = "Shop Owner"
                        },
                        new
                        {
                            PositionId = 2,
                            PositionName = "Administrator"
                        },
                        new
                        {
                            PositionId = 3,
                            PositionName = "Accountant"
                        },
                        new
                        {
                            PositionId = 4,
                            PositionName = "Security"
                        },
                        new
                        {
                            PositionId = 5,
                            PositionName = "Consultant Manager"
                        },
                        new
                        {
                            PositionId = 6,
                            PositionName = "Technical Staff"
                        });
                });

            modelBuilder.Entity("JewelryStore.DAL.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Metal")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Stone")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Manufacturer = "Ukraine",
                            Metal = "Silver",
                            Name = "Silver stud earrings with pink cubic zirconium",
                            Price = 2146m,
                            Stone = "Pink cub. zirconium",
                            Weight = 3m
                        },
                        new
                        {
                            ProductId = 2,
                            Manufacturer = "Ukraine",
                            Metal = "Silver",
                            Name = "Silver necklace with cubic zirconia",
                            Price = 8038m,
                            Size = 47m,
                            Stone = "Cub. zirconium",
                            Weight = 6m
                        },
                        new
                        {
                            ProductId = 3,
                            Manufacturer = "Ukraine",
                            Metal = "Gold",
                            Name = "White gold necklace with cubic zirconia",
                            Price = 12020m,
                            Size = 47m,
                            Stone = "Pink and white cub. zirconium",
                            Weight = 4m
                        },
                        new
                        {
                            ProductId = 4,
                            Manufacturer = "Ukraine",
                            Metal = "Silver",
                            Name = "Silver pendant with pink and white cubic zirconium",
                            Price = 16676m,
                            Stone = "Pink and white cub. zirconium",
                            Weight = 1m
                        },
                        new
                        {
                            ProductId = 5,
                            Manufacturer = "Ukraine",
                            Metal = "Silver",
                            Name = "Silver stud earrings with cubic zirconium",
                            Price = 3461m,
                            Stone = "Cub. zirconium",
                            Weight = 2m
                        },
                        new
                        {
                            ProductId = 6,
                            Manufacturer = "Ukraine",
                            Metal = "Silver",
                            Name = "Silver ring with cubic zirconia",
                            Price = 8395m,
                            Size = 16m,
                            Stone = "Cub. zirconium",
                            Weight = 5m
                        },
                        new
                        {
                            ProductId = 7,
                            Manufacturer = "Ukraine",
                            Metal = "Silver",
                            Name = "Silver pendant with cubic zirconium",
                            Price = 4072m,
                            Stone = "Cub. zirconium",
                            Weight = 1m
                        },
                        new
                        {
                            ProductId = 8,
                            Manufacturer = "Ukraine",
                            Metal = "Gold",
                            Name = "White gold bracelet with cubic zirconia",
                            Price = 28000m,
                            Size = 170m,
                            Stone = "Cub. zirconium",
                            Weight = 4m
                        },
                        new
                        {
                            ProductId = 9,
                            Manufacturer = "Ukraine",
                            Metal = "Silver",
                            Name = "Silver ring",
                            Price = 4303m,
                            Size = 16m,
                            Stone = "None",
                            Weight = 2m
                        },
                        new
                        {
                            ProductId = 10,
                            Manufacturer = "Ukraine",
                            Metal = "Gold",
                            Name = "White gold ring with sapphire and diamonds",
                            Price = 58570m,
                            Size = 17m,
                            Stone = "Diamond, sapphire",
                            Weight = 2m
                        });
                });

            modelBuilder.Entity("JewelryStore.DAL.Models.Employee", b =>
                {
                    b.HasOne("JewelryStore.DAL.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("JewelryStore.DAL.Models.Order", b =>
                {
                    b.HasOne("JewelryStore.DAL.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JewelryStore.DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JewelryStore.DAL.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
